{
  "openapi": "3.0.0",
  "info": {
    "title": "Islandora Workbench Config Schema",
    "version": "0.0.1"
  },
  "paths": {
    "/api/config/validate": {
      "post": {
        "requestBody": {
          "required": true,
          "content": {
            "application/yaml": {
              "schema": {
                "$ref": "#/components/schemas/Required"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task executed successfully"
          },
          "400": {
            "description": "Bad request, check request parameters"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Required": {
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "enum": [
              "create",
              "create_from_files",
              "update",
              "delete",
              "add_media",
              "delete_media",
              "update_media",
              "export_csv",
              "get_data_from_view",
              "create_terms",
              "delete_media_by_node"
            ],
            "description": "One of 'create', 'create_from_files', 'update', delete', 'add_media', 'delete_media', 'update_media', 'export_csv', 'get_data_from_view', 'create_terms', or 'delete_media_by_node'. See \"[Choosing a task](/islandora_workbench_docs/choosing_a_task/)\" for more information."
          },
          "host": {
            "type": "string",
            "format": "uri",
            "description": "The hostname, including \\`http://\\` or \\`https://\\` of your Islandora repository, and port number if not the default 80. "
          },
          "username": {
            "type": "string",
            "description": "The username used to authenticate the requests. This Drupal user should be a member of the \"Administrator\" role. If you want to create nodes that are owned by a specific Drupal user, include their numeric user ID in the \\`uid\\` column in your CSV. "
          },
          "password": {
            "type": "string",
            "description": "The user's password. You can also set the password in your \\`ISLANDORA_WORKBENCH_PASSWORD\\` environment variable. If you do this, omit the \\`password\\` option in your configuration file. If a password is not available in either your configuration file or in the environment variable, Workbench will prompt for a password."
          }
        },
        "required": [
          "task",
          "host",
          "username"
        ]
      },
      "DrupalSettings": {
        "type": "object",
        "properties": {
          "content_type": {
            "type": "string",
            "description": "The machine name of the Drupal node content type you are creating or updating. Required in \"create\" and \"update\" tasks. ",
            "default": "islandora_object"
          },
          "drupal_filesystem": {
            "type": "string",
            "description": "One of 'fedora://', 'public://', or 'private://' (the wrapping quotation marks are required). Only used with Drupal 8.x - 9.1; starting with Drupal 9.2, the filesystem is automatically detected from the media's configuration. Will eventually be deprecated. ",
            "default": "fedora://"
          },
          "allow_adding_terms": {
            "type": "boolean",
            "description": "In \\`create\\` and \\`update\\` tasks, determines if Workbench will add taxonomy terms if they do not exist in the target vocabulary. See more information in the \"[Taxonomy reference fields](/islandora_workbench_docs/fields/#field-types)\" section. Note: this setting is not required in \\`create_terms\\` tasks. ",
            "default": false
          },
          "vocab_id": {
            "type": "string",
            "description": "Identifies the vocabulary you are adding terms to in \\`create_tersm\\` tasks. See more information in the \"[Creating taxonomy terms](/islandora_workbench_docs/creating_taxonomy_terms)\" section. "
          },
          "update_mode": {
            "type": "string",
            "description": "Determines if Workbench will \\`replace\\`, \\`append\\` (add to) , or \\`delete\\` field values during \\`update\\` tasks. See more information in the \"[Updating nodes](/islandora_workbench_docs/updating_nodes)\" section. ",
            "default": "replace"
          },
          "validate_terms_exist": {
            "type": "boolean",
            "description": "If set to false, during \\`--check\\` Workbench will not query Drupal to determine if taxonomy terms exist. The structure of term values in CSV are still validated; this option only tells Workbench to not check for each term's existence in the target Drupal. Useful to speed up the \\`--check\\` process if you know terms don't exist in the target Drupal. ",
            "default": true
          },
          "validate_parent_node_exists": {
            "type": "boolean",
            "description": "If set to false, during \\`--check\\` Workbench will not query Drupal to determine if nodes whose node IDs are in \\`field_member_of\\` exist. Useful to speed up the \\`--check\\` process if you know terms already exist in the target Drupal. ",
            "default": true
          },
          "max_node_title_length": {
            "type": "integer",
            "description": "Set to the number of allowed characters for node titles if your Drupal uses [Node Title Length](https://www.drupal.org/project/title_length). If unsure what your the maximum length of the node titles your site allows, check the length of the \"title\" column in your Drupal database's \"node_field_data\" table. ",
            "default": 255
          },
          "list_missing_drupal_fields": {
            "type": "boolean",
            "description": "Set to \\`true\\` to tell Workbench to provide a list of fields that exist in your input CSV but that cannot be matched to Drupal field names (or reserved column names such as \"file\"). If \\`false\\`, Workbench will still check for CSV column headers that it can't match to Drupal fields, but will exit upon finding the first such field. This option produces a list of fields instead of exiting on detecting the first field.",
            "default": false
          },
          "standalone_media_url": {
            "type": "boolean",
            "description": "Set to \\`true\\` if your Drupal instance has the \"Standalone media URL\" option at \\`/admin/config/media/media-settings\\` checked. The Drupal default is to have this unchecked, so you only need to use this Workbench option if you have changed Drupal's default. [More information](/islandora_workbench_docs/installation/#configuring-drupals-media-urls) is available. ",
            "default": false
          },
          "require_entity_reference_views": {
            "type": "boolean",
            "description": "Set to \\`false\\` to tell Workbench to not require a View to expose the values in an entity reference field configured to use an Entity Reference View. Additional information is available [here](/islandora_workbench_docs/fields/#entity-reference-views-fields). ",
            "default": true
          },
          "text_format_id": {
            "type": "string",
            "description": "The text format ID (machine name) to apply to all Drupal text fields that have a \"formatted\" field type. Use \\`text_format_ids\\` (plural) to provide a text format ID for a specific Drupal field. See \"[Text fields with markup](/islandora_workbench_docs/fields/#text-fields-with-markup)\" for more information. ",
            "default": "basic_html"
          }
        }
      },
      "InputDataLocationSettings": {
        "type": "object",
        "properties": {
          "input_dir": {
            "type": "string",
            "description": "The full or relative path to the directory containing the files and metadata CSV file. ",
            "default": "input_data"
          },
          "input_csv": {
            "type": "string",
            "description": "Path to the CSV metadata file. Can be absolute, or if just the filename is provided, will be assumed to be in the directory named in \\`input_dir\\`. Can also be the URL to a Google spreadsheet (see the \"[Using Google Sheets as input data](/islandora_workbench_docs/preparing_data/#using-a-google-sheet-as-the-input-csv-file)\" section for more information). ",
            "default": "metadata.csv"
          },
          "google_sheets_csv_filename": {
            "type": "string",
            "description": "Local CSV filename for data from a Google spreadsheet. See the \"[Using Google Sheets as input data](/islandora_workbench_docs/preparing_data/#using-a-google-sheet-as-the-input-csv-file)\" section for more information. "
          },
          "google_sheets_gid": {
            "type": "integer",
            "description": "The \"gid\" of the worksheet to use in a Google Sheet. See  \"[Using Google Sheets as input data](/islandora_workbench_docs/preparing_data/#using-a-google-sheet-as-the-input-csv-file)\" section for more information. ",
            "default": 0
          },
          "excel_worksheet": {
            "type": "string",
            "description": "If using an Excel file as your input CSV file, the name of the worksheet that the CSV data will be extracted from. ",
            "default": "Sheet1"
          }
        },
        "required": [
          "input_dir",
          "input_csv"
        ]
      },
      "InputCSVFileSettings": {
        "type": "object",
        "properties": {
          "id_field": {
            "type": "string",
            "description": "The name of the field in the CSV that uniquely identifies each record. ",
            "default": "id"
          },
          "delimiter": {
            "type": "string",
            "description": "The delimiter used in the CSV file, for example, \",\" or \"\\t\" (must use double quotes with \"\\t\"). If omitted, defaults to \",\". ",
            "default": ","
          },
          "subdelimiter": {
            "type": "string",
            "description": "The subdelimiter used in the CSV file to define multiple values in one field. If omitted, defaults to \"&#124;\". Can be a string of multiple characters, e.g. \"^^^\". ",
            "default": "|"
          },
          "csv_field_templates": {
            "type": "object",
            "description": "Used in the \\`create\\` and \\`update\\` tasks only. A list of Drupal field machine names and corresponding values that are copied into the CSV input file. More detail provided in the \"[CSV field templates](/islandora_workbench_docs/field_templates/)\" section.",
            "additionalProperties": {
              "type": "string"
            }
          },
          "csv_value_templates": {
            "type": "object",
            "description": "Used in the \\`create\\` and \\`update\\` tasks only. A list of Drupal field machine names and corresponding templates. More detail provided in the \"[CSV value templates](/islandora_workbench_docs/csv_value_templates/)\" section."
          },
          "ignore_csv_columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Used in the \\`create\\` and \\`update\\` tasks only. A list of CSV column headers that Workbench should ignore. For example, \\`ignore_csv_columns: [Target Collection, Ready to publish]\\`"
          },
          "csv_start_row": {
            "type": "integer",
            "description": "Used in all tasks. Tells Workbench to ignore all rows/records in input CSV (or Google Sheet or Excel) before the designated row number. [More information](/islandora_workbench_docs/ignoring_csv_rows_and_columns/#using-csv-row-ranges) is available. "
          },
          "csv_stop_row": {
            "type": "integer",
            "description": "Used in all tasks. Tells Workbench to ignore all rows/records in input CSV (or Google Sheet or Excel) after the designated row number. [More information](/islandora_workbench_docs/ignoring_csv_rows_and_columns/#using-csv-row-ranges) is available."
          },
          "csv_headers": {
            "type": "string",
            "enum": [
              "names",
              "labels"
            ],
            "description": "Used in \"create\", \"update\" and \"create_terms\" tasks. Set to \"labels\" to allow use of field labels (as opposed to machine names) as CSV column headers. ",
            "default": "names"
          },
          "clean_csv_values_skip": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Used in all tasks that use CSV input files. See \"[How Workbench cleans your input data](/islandora_workbench_docs/preparing_data/#how-workbench-cleans-your-input-data)\" for more information. "
          }
        },
        "required": [
          "id_field"
        ]
      },
      "OutputCSVSettings": {
        "type": "object",
        "description": "See \"[Generating CSV files](generating_csv_files/)\" section for more information.",
        "properties": {
          "output_csv": {
            "type": "string",
            "description": "The full or relative (to the \"workbench\" script) path to a CSV file with one record per node created by Workbench. "
          },
          "output_csv_include_input_csv": {
            "type": "boolean",
            "description": "Include in the output CSV all the fields (and their values) from the input CSV. ",
            "default": false
          },
          "export_csv_term_mode": {
            "type": "string",
            "enum": [
              "tid",
              "name"
            ],
            "description": "Used in \"export_csv\" tasks to indicate whether vocabulary term IDs or names are included in the output CSV file. Set to \"tid\" (the default) to include term IDs, or set to \"name\" to include term names. See \"[Exporting field data into a CSV file](/islandora_workbench_docs/generating_csv_files/#exporting-field-data-into-a-csv-file)\" for more information. ",
            "default": "tid"
          },
          "export_csv_field_list": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of fields to include in exported CSV data. If empty, all fields will be included.  See \"[Using a Drupal View to identify content to export as CSV](/islandora_workbench_docs/generating_csv_files/#using-a-drupal-view-to-identify-content-to-export-as-csv)\" for more information. "
          },
          "view_parameters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of URL parameter/value strings to include in requests to a View. See \"[Using a Drupal View to identify content to export as CSV](/islandora_workbench_docs/generating_csv_files/#using-a-drupal-view-to-identify-content-to-export-as-csv)\" for more information. "
          },
          "export_csv_file_path": {
            "type": "string",
            "description": "Used in the \"export_csv\" and \"get_data_from_view\" tasks. The path to the exported CSV file. Required in the \"get_data_from_view\" task; in the \"export_csv\" task, if left empty (the default), the file will be named after the value of the \\`input_csv\\` with \".csv_file_with_field_values\" appended and saved in the directory identified in \\`input_dir\\`. "
          },
          "export_file_directory": {
            "type": "string",
            "description": "Used in the \"export_csv\" and \"get_data_from_view\" tasks. The path to the directory where files corresponding to the data in the CSV output file will be written. "
          },
          "export_file_media_use_term_id": {
            "type": "string",
            "description": "Used in the \"export_csv\" and \"get_data_from_view\" tasks. The term ID or URI from the Islandora Media Use vocabulary that identifies the file you want to export. ",
            "default": "http://pcdm.org/use#OriginalFile"
          }
        },
        "required": [
          "export_csv_file_path"
        ]
      },
      "MediaSettings": {
        "type": "object",
        "properties": {
          "nodes_only": {
            "type": "boolean",
            "description": "Include this option in \\`create\\` tasks, set to \\`true\\`, if you want to only create nodes and not their accompanying media. See the \"Creating nodes but not media\" section for more information. ",
            "default": false
          },
          "allow_missing_files": {
            "type": "boolean",
            "description": "Determines if empty \\`file\\` values are allowed. Used in the \\`create\\` and \\`add_media\\` tasks. If set to true, empty \\`file\\` values are allowed. For \\`create\\` tasks, a \\`true\\` value will result in nodes without attached media. For \\`add_media\\` tasks, a \\`true\\` value will skip adding a media for the empty \\`file\\` CSV value. Defaults to false (which means all file values must contain the name of a file that exists in the \\`input_data\\` directory). ",
            "default": false
          },
          "strict_check": {
            "type": "boolean",
            "description": "Replaced with \\`perform_soft_checks\\` as of commit dfa60ff (July 14, 2023). "
          },
          "perform_soft_checks": {
            "type": "boolean",
            "description": "Use soft checks for validation during processing."
          },
          "media_use_tid": {
            "type": "string",
            "description": "The term ID for the term from the \"Islandora Media Use\" vocabulary you want to apply to the media being created in \\`create\\` and \\`add_media\\` tasks. You can provide a term URI instead of a term ID, for example \\`\"http://pcdm.org/use#OriginalFile\"\\`. You can specify multiple values for this setting by joining them with the subdelimiter configured in the \\`subdelimiter\\` setting; for example, \\`media_use_tid: 17"
          },
          "media_type": {
            "type": "string",
            "description": "Overrides, for all media being created, Workbench's default definition of whether the media being created is an image, file, document, audio, or video. Used in the \\`create\\`, \\`add_media\\`, and \\`create_from_files\\` tasks. More detail provided in the \"[Configuring Media Types](/islandora_workbench_docs/media_types)\" section. "
          },
          "media_types_override": {
            "type": "object",
            "description": "Overrides default media type definitions on a per file extension basis. Used in the \\`create\\`, \\`add_media\\`, and \\`create_from_files\\` tasks. More detail provided in the \"[Configuring Media Types](/islandora_workbench_docs/media_types)\" section. "
          },
          "media_type_file_fields": {
            "type": "string",
            "description": "Defines the name of the media field that references media's file (i.e., the field on the Media type). Usually used with custom media types and accompanied by either the \\`media_type\\` or \\`media_types_override\\` option. For more information, see the \"[Configuring Media Types](/islandora_workbench_docs/media_types)\" section. "
          },
          "mimetype_extensions": {
            "type": "object",
            "description": "Overrides Workbench's default mappings between MIME types and file extensions. Usually used with remote files where the remote web server returns a MIME type that is not standard. For more information, see the \"[Configuring Media Types](/islandora_workbench_docs/media_types)\" section. "
          },
          "delete_media_with_nodes": {
            "type": "boolean",
            "description": "When a node is deleted using a \\`delete\\` task, by default, all if its media are automatically deleted. Set this option to false to not delete all of a node's media (you do not generally want to keep the media without the node). ",
            "default": true
          },
          "use_node_title_for_media_title": {
            "type": "boolean",
            "description": "If set to \\`true\\` (default), name media the same as the parent node's title value. Truncates the value of the field to 255 characters. Applies to both \\`create\\` and \\`add_media\\` tasks. ",
            "default": true
          },
          "use_nid_in_media_title": {
            "type": "boolean",
            "description": "If set to \\`true\\`, assigns a name to the media following the pattern \\`{node_id}-Original File\\`. Set to true to use the parent node's node ID as the media title. Applies to both \\`create\\` and \\`add_media\\` tasks. ",
            "default": false
          },
          "field_for_media_title": {
            "type": "string",
            "description": "Identifies a CSV field name (machine name, not human readable) that will be used as the media title in create tasks. For example, \\`field_for_media_title: id\\`. Truncates the value of the field to 255 characters. Applies to both \\`create\\` and \\`add_media\\` tasks."
          },
          "use_node_title_for_remote_filename": {
            "type": "boolean",
            "description": "Set to true to use a version of the parent node's title as the filename for a remote (http[s]) file. Replaces all non-alphanumeric characters with an underscore (\\`_\\`). Truncates the value of the field to 255 characters. Applies to both \\`create\\` and \\`add_media\\` tasks. Note: this setting replaces (the previously undocumented) \\`use_nid_in_media_filename\\` setting.",
            "default": false
          },
          "field_for_remote_filename": {
            "type": "string",
            "description": "Identifies a CSV field name (machine name, not human readable) that will be used as the filename for a remote (http[s]) file. For example, \\`field_for_remote_filename: id\\`. Truncates the value of the field to 255 characters. If the field is empty in the CSV, the CSV ID field value will be used. Applies to both \\`create\\` and \\`add_media\\` tasks. Note: this setting replaces (the previously undocumented) \\`field_for_media_filename\\` setting."
          },
          "delete_tmp_upload": {
            "type": "boolean",
            "description": "For remote files, if set to \\`true\\`, the temporary copy of the remote file is deleted after it is used to create media. If \\`false\\`, the copy will remain in the location defined in your \\`temp_dir\\` setting. If the file cannot be deleted (e.g. a virus scanner is scanning it), it will remain and an error message will be added to the log file. ",
            "default": false
          },
          "additional_files": {
            "type": "object",
            "description": "Maps a set of CSV field names to media use terms IDs to create additional media (additional to the media created from the file named in the \"file\" column, that is) in \\`create\\` and \\`add_media\\` tasks. See \"[Adding multiple media](/islandora_workbench_docs/adding_multiple_media)\" for more information. "
          },
          "fixity_algorithm": {
            "type": "string",
            "enum": [
              "md5",
              "sha1",
              "sha256"
            ],
            "description": "Checksum/hash algorithm to use during transmission fixity checking. Must be one of \"md5\", \"sha1\", or \"sha256\". See \"[Fixity checking](/islandora_workbench_docs/fixity)\" for more information. "
          },
          "validate_fixity_during_check": {
            "type": "boolean",
            "description": "Perform checksum validation during \\`--check\\`. See \"[Fixity checking](/islandora_workbench_docs/fixity)\" for more information. ",
            "default": false
          },
          "delete_media_by_node_media_use_tids": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "During \\`delete_media_by_node\\` tasks, allows you to specify which media to delete. Only media with the listed terms IDs from the Islandora Media Use vocabulary will be deleted. By default (an empty list), all media are deleted. See \"[Deleting Media](/islandora_workbench_docs/deleting_media)\" for more information."
          },
          "exit_on_first_missing_file_during_check": {
            "type": "boolean",
            "description": "Removed as a configuration setting November 1, 2022. Use \\`strict_check\\` instead. ",
            "default": true
          }
        }
      },
      "IslandoraModelSettings": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "description": "Used in the \\`create_from_files\\` task only. Defines the term ID from the the \"Islandora Models\" vocabulary for all nodes created using this task. Note: one of \\`model\\` or \\`models\\` is required. More detail provided in the \"[Creating nodes from files](/islandora_workbench_docs/creating_nodes_from_files/)\" section."
          },
          "models": {
            "type": "object",
            "description": "Used in the \\`create_from_files\\` task only. Provides a mapping between file extensions and terms in the \"Islandora Models\" vocabulary. Note: one of \\`model\\` or \\`models\\` is required. More detail provided in the [Creating nodes from files](/islandora_workbench_docs/creating_nodes_from_files/)\" section."
          }
        }
      },
      "PagedAndCompoundContentSettings": {
        "type": "object",
        "description": "See the section \"[Creating paged content](paged_and_compound/)\" for more information.",
        "properties": {
          "paged_content_from_directories": {
            "type": "boolean",
            "description": "Set to true if you are using the \"[Using subdirectories](/islandora_workbench_docs/paged_and_compound/#using-subdirectories)\" method of creating paged content. ",
            "default": false
          },
          "paged_content_sequence_separator": {
            "type": "string",
            "description": "The character used to separate the page sequence number from the rest of the filename. Used when creating paged content with the \"[Using subdirectories](/islandora_workbench_docs/paged_and_compound/#using-subdirectories)\" method. Note: this configuration option was originally misspelled \"paged_content_sequence_seprator\". ",
            "default": "-"
          },
          "paged_content_page_model_tid": {
            "type": "string",
            "description": "Required if \\`paged_content_from_directories\\` is true. The the term ID from the Islandora Models (or its URI) taxonomy to assign to pages. "
          },
          "paged_content_page_display_hints": {
            "type": "string",
            "description": "The term ID from the Islandora Display taxonomy to assign to pages. If not included, defaults to the value of the \\`field_display_hints\\` in the parent's record in the CSV file. "
          },
          "paged_content_page_content_type": {
            "type": "string",
            "description": "Set to the machine name of the Drupal node content type for pages created using the \"[Using subdirectories](/islandora_workbench_docs/paged_and_compound/#using-subdirectories)\" method if it is different than the content type of the parent (which is specified in the content_type setting). "
          },
          "page_title_template": {
            "type": "string",
            "description": "Template used to generate the titles of pages/members in the \"[Using subdirectories](/islandora_workbench_docs/paged_and_compound/#using-subdirectories)\" method. ",
            "default": "$parent_title, page $weight"
          },
          "secondary_tasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of configuration file names that are executed as secondary tasks after the primary task to create compound objects. See \"[Using a secondary task](/islandora_workbench_docs/paged_and_compound/#using-a-secondary-task)\" for more information. "
          },
          "csv_id_to_node_id_map_path": {
            "type": "string",
            "description": "Name of the SQLite database filename used to store CSV row ID to node ID mappings for nodes created during \\`create\\` and \\`create_from_files\\` tasks. If you want to store your map database outside of a temporary directory, use an absolute path to the database file for this setting. If you want to disable population of this database, set this config setting to \\`false\\`. See \"[Generating CSV files](/islandora_workbench_docs/generating_csv_files/#using-the-csv-id-to-node-id-map)\" for more information. ",
            "default": "[temp_dir]/csv_id_to_node_id_map.db"
          },
          "query_csv_id_to_node_id_map_for_parents": {
            "type": "boolean",
            "description": "Queries the CSV ID to node ID map when creating compound content. Set to \\`true\\` if you want to use parent IDs from previous Workbench sessions. Note: this setting is automatically set to true in secondary task config files. See \"[Creating parent/child relationships across Workbench sessions](/islandora_workbench_docs/paged_and_compound/#creating-parentchild-relationships-across-workbench-sessions) for more information.\" "
          },
          "ignore_duplicate_parent_ids": {
            "type": "boolean",
            "description": "Tells Workbench to ignore entries in the CSV ID to node ID map that have the same parent ID value. Set to \\`false\\` if you want Workbench to warn you that there are duplicate parent IDs in your CSV ID to node ID map. See \"[Creating parent/child relationships across Workbench sessions](/islandora_workbench_docs/paged_and_compound/#creating-parentchild-relationships-across-workbench-sessions) for more information.\" ",
            "default": true
          }
        }
      },
      "LoggingSettings": {
        "type": "object",
        "description": "See the \"[Logging](logging/)\" section for more information.",
        "properties": {
          "log_file_path": {
            "type": "string",
            "description": "The path to the log file, absolute or relative to the directory Workbench is run from. ",
            "default": "workbench.log"
          },
          "log_file_mode": {
            "type": "string",
            "enum": [
              "a",
              "w"
            ],
            "description": "Set to \"w\" to overwrite the log file, if it exists. ",
            "default": "a"
          },
          "log_request_url": {
            "type": "boolean",
            "description": "Whether or not to log the request URL (and its method). Useful for debugging. ",
            "default": false
          },
          "log_json": {
            "type": "boolean",
            "description": "Whether or not to log the raw request JSON POSTed, PUT, or PATCHed to Drupal. Useful for debugging. ",
            "default": false
          },
          "log_headers": {
            "type": "boolean",
            "description": "Whether or not to log the raw HTTP headers used in all requests. Useful for debugging. ",
            "default": false
          },
          "log_response_status_code": {
            "type": "boolean",
            "description": "Whether or not to log the HTTP response code. Useful for debugging. ",
            "default": false
          },
          "log_response_time": {
            "type": "boolean",
            "description": "Whether or not to log the response time of each request that is slower than the average response time for the last 20 HTTP requests Workbench makes to the Drupal server. Useful for debugging. ",
            "default": false
          },
          "log_response_body": {
            "type": "boolean",
            "description": "Whether or not to log the raw HTTP response body. Useful for debugging. ",
            "default": false
          },
          "log_term_creation": {
            "type": "boolean",
            "description": "Whether or not to log the creation of new terms during \"create\" and \"update\" tasks (does not apply to the \"create_terms\" task). \\`--check\\` will still report that terms in the CSV do not exist in their respective vocabularies. ",
            "default": true
          }
        }
      },
      "HttpSettings": {
        "type": "object",
        "properties": {
          "user_agent": {
            "type": "string",
            "description": "String to use as the User-Agent header in HTTP requests. ",
            "default": "Islandora Workbench"
          },
          "allow_redirects": {
            "type": "boolean",
            "description": "Whether or not to allow Islandora Workbench to respond to HTTP redirects.",
            "default": true
          },
          "secure_ssl_only": {
            "type": "boolean",
            "description": "Whether or not to require valid SSL certificates. Set to false if you want to ignore SSL certificates.",
            "default": true
          },
          "enable_http_cache": {
            "type": "boolean",
            "description": "Whether or not to enable Workbench's client-side request cache. Set to false if you want to disable the cache during troubleshooting, etc.",
            "default": true
          },
          "http_cache_storage": {
            "type": "string",
            "enum": [
              "memory",
              "sqlite"
            ],
            "description": "The backend storage type for the client-side cache. Set to sqlite if you are getting out of memory errors while running Islandora Workbench.",
            "default": "memory"
          },
          "http_cache_storage_expire_after": {
            "type": "integer",
            "description": "Length of the client-side cache lifespan (in seconds). Reduce this number if you are using the sqlite storage backend and the database is using too much disk space. Note that reducing the cache lifespan will result in increased load on your Drupal server.",
            "default": 1200
          }
        }
      },
      "MiscellaneousSettings": {
        "type": "object",
        "properties": {
          "perform_soft_checks": {
            "type": "boolean",
            "description": "If set to true, \\`--check\\` will not exit when it encounters an error with parent/child order, file extension registration with Drupal media file fields, or EDTF validation. Instead, it will log any errors it encounters and exit after it has checked all rows in the CSV input file. Note: this setting replaces \\`strict_check\\`. ",
            "default": false
          },
          "temp_dir": {
            "type": "string",
            "description": "Relative or absolute path to the directory where you want Workbench's temporary files to be written. These include the \".preprocessed\" version of the your input CSV, remote files temporarily downloaded to create media, and the CSV ID to node ID map database. "
          },
          "sqlite_db_filename": {
            "type": "string",
            "description": "Name of the SQLite database filename used to store session data. ",
            "default": "[temp_dir]/workbench_temp_data.db"
          },
          "rollback_dir": {
            "type": "string",
            "description": "Absolute path to the directory where you want your \"rollback.csv\" file to be written. See \"[Rolling back](/islandora_workbench_docs/rolling_back/)\" for more information."
          },
          "timestamp_rollback": {
            "type": "boolean",
            "description": "Set to \\`true\\` to add a timestamp to the \"rollback.yml\" and corresponding \"rollback.csv\" generated in \"create\" and \"create_from_files\" tasks. See \"[Rolling back](/islandora_workbench_docs/rolling_back/)\" for more information.",
            "default": false
          },
          "pause": {
            "type": "integer",
            "description": "Defines the number of seconds to pause between all 'POST', 'PUT', 'PATCH', 'DELETE' requests to Drupal. Include it in your configuration to lessen the impact of Islandora Workbench on your site during large jobs, for example pause: 1.5. More information is available in the \"[Reducing Workbench's impact on Drupal](/islandora_workbench_docs/reducing_load/)\" documentation."
          },
          "adaptive_pause": {
            "type": "integer",
            "description": "Defines the number of seconds to pause between each REST request to Drupal. Works like \"pause\" but only takes effect when the Drupal server's response to the most recent request is slower (determined by the \"adaptive_pause_threshold\" value) than the average response time for the last 20 requests. More information is available in the \"[Reducing Workbench's impact on Drupal](/islandora_workbench_docs/reducing_load/)\" documentation. "
          },
          "adaptive_pause_threshold": {
            "type": "integer",
            "description": "A weighting of the response time for the most recent request, relative to the average response times of the last 20 requests. This weighting determines how much slower the Drupal server's response to the most recent Workbench request must be in order for adaptive pausing to take effect for the next request.",
            "default": 2
          },
          "progress_bar": {
            "type": "boolean",
            "description": "Show a progress bar when running Workbench instead of row-by-row output.",
            "default": false
          },
          "bootstrap": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that execute prior to Workbench connecting to Drupal."
          },
          "shutdown": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that execute after Workbench connecting to Drupal."
          },
          "preprocessors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that are applied to CSV values prior to the values being ingested into Drupal."
          },
          "node_post_create": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that execute after a node is created."
          },
          "node_post_update": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that execute after a node is updated."
          },
          "media_post_create": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of absolute paths to one or more scripts that execute after a media is created."
          },
          "path_to_python": {
            "type": "string",
            "description": "Used in create tasks that also use the secondary_tasks option. Tells Workbench the path to the python interpreter."
          },
          "path_to_workbench_script": {
            "type": "string",
            "description": "Used in create tasks that also use the secondary_tasks option. Tells Workbench the path to the python interpreter."
          },
          "contact_sheet_output_dir": {
            "type": "string",
            "description": "Used in create tasks to specify the name of the directory where contact sheet output is written. Can be relative (to the Workbench directory) or absolute."
          },
          "contact_sheet_css_path": {
            "type": "string",
            "description": "Used in create tasks to specify the path of the CSS stylesheet to use in contact sheets. Can be relative (to the Workbench directory) or absolute.",
            "default": "assets/contact_sheet/contact-sheet.css"
          }
        }
      }
    }
  }
}
